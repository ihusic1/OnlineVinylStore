package ba.unsa.etf.rpr.business;

import ba.unsa.etf.rpr.dao.DaoFactory;
import ba.unsa.etf.rpr.domain.Genre;
import ba.unsa.etf.rpr.exceptions.RecordException;

import java.util.List;

/**
 * Business Logic Layer for management of Genres
 *
 * @author Ilma Husic
 */
public class GenreManager {

    public void validateGenreName(String name) throws RecordException{
        if (name == null || name.length() > 50 || name.length() < 3){
            throw new RecordException("Genre name must be between 3 and 50 chars");
        }
    }

    public Genre add(Genre cat) throws RecordException {
        if (cat.getId() != 0){
            throw new RecordException("Can't add genre with ID. ID is autogenerated");
        }
        validateGenreName(cat.getName());

        try{
            return DaoFactory.genreDao().add(cat);
        }catch (RecordException e){
            if (e.getMessage().contains("UQ_NAME")){
                throw new RecordException("Genre with same name exists");
            }
            throw e;
        }
    }

    public void delete(int genreId) throws RecordException{
        try{
            DaoFactory.genreDao().delete(genreId);
        }catch (RecordException e){
            if (e.getMessage().contains("FOREIGN KEY")){
                throw new RecordException("Cannot delete genre which is related to records. First delete related records before deleting genre.");
            }
            throw e;
        }

    }

    public Genre update(Genre cat) throws RecordException{
        validateGenreName(cat.getName());
        return DaoFactory.genreDao().update(cat);
    }

    public List<Genre> getAll() throws RecordException{
        return DaoFactory.genreDao().getAll();
    }

    public List<Genre> searchGenreId(String name) throws RecordException{
        return DaoFactory.genreDao().searchGenreId(name);
    }

}
